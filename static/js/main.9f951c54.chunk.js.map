{"version":3,"sources":["logo.svg","actions.js","Search.js","Results.js","Home.js","App.js","serviceWorker.js","reducers/articleReducer.js","reducers/topicReducer.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","REDUCE_ARTICLES","articleReducer","articles","type","REDUCE_TOPICS","Search","newQueryTerm","_callee","e","newSearchValue","regenerator_default","a","wrap","_context","prev","next","preventDefault","document","getElementsByName","value","toLowerCase","console","log","this","props","topicReducer","history","push","stop","_this2","react_default","createElement","className","src","process","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onSubmit","placeholder","name","Component","connect","state","topics","dispatch","ownProps","searchValue","withRouter","Results","newQuery","req","match","params","term","Request","getURL","fetch","then","response","json","data","prevProps","class","map","href","url","title","Home","concat","newsLoad","App","src_Search","react_router","exact","path","render","routerProps","src_Home","component","Boolean","window","location","hostname","arguments","length","undefined","action","initialUserState","arr","Object","objectSpread","toConsumableArray","store","combineReducers","createdStore","createStore","ReactDOM","react_router_dom","basename","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f951c54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const REDUCE_ARTICLES = 'REDUCE_ARTICLES'\n\nexport function articleReducer(articles){\n  return {type: REDUCE_ARTICLES, articles}\n}\n\nexport const REDUCE_TOPICS = 'REDUCE_TOPICS'\n\nexport function topicReducer(searchValue){\n  return {type: REDUCE_TOPICS, searchValue}\n}\n","import React, { Component } from 'react';\nimport {articleReducer, topicReducer} from './actions';\nimport {connect} from 'react-redux';\nimport {NavLink, withRouter} from 'react-router-dom';\n\nclass Search extends Component {\n\n\n\n    newQueryTerm = async function(e){\n      e.preventDefault();\n      let newSearchValue = document.getElementsByName('search')[0].value.toLowerCase();\n      console.log('search component set: ' + newSearchValue)\n      this.props.topicReducer(newSearchValue)\n      this.props.history.push('/results/'+newSearchValue);\n    }\n\n  render() {\n      return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <div><img className=\"img-fluid icon\" type=\"image/svg+xml\" src={process.env.PUBLIC_URL + 'newspaper.svg'}/></div>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <form className=\"form-inline my-2 my-lg-0 ml-auto\" onSubmit={e => this.newQueryTerm(e)}>\n        <div className=\"container-fluid search-bar align-items-center\">\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" name=\"search\"/>\n          <button className=\"btn ml-2 ml-sm-0\" type=\"submit\"><img className=\"img-fluid search-button\" src=\"search.svg\"/></button>\n        </div>\n      </form>\n    </div>\n  </nav>\n\n      );\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n     articles: state.articleReducer,\n     topics: state.topicReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        articleReducer: (articles) =>{\n          dispatch(articleReducer(articles))\n        },\n          topicReducer: (searchValue) => {\n            dispatch(topicReducer(searchValue))\n          }\n        }\n      }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Search));\n","import React, { Component } from 'react';\nimport {NavLink, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {articleReducer} from './actions'\n\nclass Results extends Component {\n\n  getURL(searchValue){\n    if(process.env.NODE_ENV == 'development'){\n      // console.log('prod')\n       return 'https://gist.githubusercontent.com/talnoznisky/44fbc43b6b359b5aa7051c8c994dd8d2/raw/d8db235fa59104e926a69fee4e8d1694f4d4b81e/apple.json'\n    }else{\n      // console.log('dev')\n      return 'https://newsapiwrapper.herokuapp.com/v1/search?q='+searchValue\n    }\n  }\n\n  newQuery = async function(){\n    let searchValue = this.props.match.params.term;\n    console.log('Results component set: '+searchValue)\n    let req = new Request(this.getURL(searchValue));\n    fetch(req)\n        .then(response => response.json()\n          .then(data =>\n            this.props.articleReducer(data.articles)\n        ))\n      }\n      componentDidMount(){\n        this.newQuery();\n      }\n      componentDidUpdate(prevProps) {\n         if (prevProps.match.params.term !== this.props.match.params.term) {\n           this.newQuery();\n         }\n       }\n  render() {\n    return (\n      <div class=\"container-fluid\">\n        {this.props.articles.map(function (e) { return <div class=\"row\"><a href={e.url}><p>{e.title}</p></a></div>})}\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n     articles: state.articleReducer\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        articleReducer: (articles) =>{\n          dispatch(articleReducer(articles))\n          }\n        }\n      }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Results));\n","import React, { Component } from 'react';\nimport Search from './Search.js';\nimport Results from './Results.js'\nimport logo from './logo.svg';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport {articleReducer} from './actions'\nimport {Switch, Route, withRouter} from 'react-router-dom'\n\n\n\nconst API_KEY = `${process.env.REACT_APP_API_KEY}`\n\nclass Home extends Component {\n\n  getURL(){\n    if(process.env.NODE_ENV == 'development'){\n      // console.log('dev')\n       return 'https://gist.githubusercontent.com/talnoznisky/1d04a8cc4c812ce70ecb3b2d57bce7d8/raw/472e33d12d843e2359f5877679eafa85299927af/top-headlines.json'\n    }else{\n      // console.log('prod')\n      return 'https://newsapiwrapper.herokuapp.com/v1/all'\n    }\n  }\n  newsLoad = async function(){\n\n    var req = new Request(this.getURL());\n    fetch(req)\n        .then(response => response.json()\n          .then(data =>\n            this.props.articleReducer(data.articles)\n        ))\n      }\n  componentWillMount(){\n    this.newsLoad()\n  }\n\n    render() {\n      return (\n        <div class=\"container-fluid\">\n          {this.props.articles.map(function (e) { return <div class=\"row\"><a href={e.url}><p>{e.title}</p></a></div>})}\n        </div>\n\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => {\n      return {\n       articles: state.articleReducer\n    }\n  }\n\n  const mapDispatchToProps = (dispatch, ownProps) => {\n      return {\n          articleReducer: (articles) =>{\n            dispatch(articleReducer(articles))\n          }\n          }\n        }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component } from 'react';\nimport Search from './Search.js';\nimport Results from './Results.js'\nimport Home from './Home.js'\nimport logo from './logo.svg';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport {articleReducer} from './actions'\nimport {Switch, Route, withRouter} from 'react-router-dom'\n\nclass App extends Component {\n\n    render() {\n      console.log('v1.0.1 loaded - trying routerProps 4')\n      return (\n        <div className=\"App\" id=\"root\">\n          <Search/>\n          <Switch>\n            <Route exact path={`/`} render={ (routerProps) => < Home routerProps={routerProps}/>} />\n            <Route path={`${process.env.PUBLIC_URL}/results/:term`} component={Results}/>\n          </Switch>\n          <div>\n          </div>\n        </div>\n\n      );\n    }\n  }\n\n  const mapStateToProps = (state) => {\n      return {\n       articles: state.articleReducer\n    }\n  }\n\n  const mapDispatchToProps = (dispatch, ownProps) => {\n      return {\n          articleReducer: (articles) =>{\n            dispatch(articleReducer(articles))\n          }\n          }\n        }\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { REDUCE_ARTICLES } from '../actions'\n\nfunction articleReducer(state = [], action){\n    switch(action.type){\n        case REDUCE_ARTICLES: {\n            state  = action.articles\n            return state;\n          }\n          default: {\n            return state;\n          }\n        }\n      }\n\nexport default articleReducer;\n","import { REDUCE_TOPICS } from '../actions'\n\nconst initialUserState = {\n    arr:[]\n}\n\n\nfunction topicReducer(state = initialUserState, action){\n    switch(action.type){\n        case REDUCE_TOPICS:{\n            return{\n              ...state,\n              arr: [...state.arr, action.searchValue]\n            }\n              }\n              default: {\n                  return state;\n                }\n              }\n            }\n\nexport default topicReducer;\n","import { combineReducers } from 'redux';\nimport articleReducer from './reducers/articleReducer'\nimport topicReducer from './reducers/topicReducer'\n\nconst store = combineReducers({\n    articleReducer,\n    topicReducer\n})\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport {BrowserRouter} from 'react-router-dom'\n\n\n\nconst createdStore = createStore(store);\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><Provider store={createdStore}><App /></Provider></BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}